import { Level } from './level';
export declare class Logger<T> {
    private name;
    color: string;
    private developmentMode;
    private allowed;
    private isMuted;
    fixedWidth: number | undefined;
    private display;
    constructor(name: string, color: string, developmentMode: boolean, allowed: Level[], isMuted: boolean, fixedWidth: number | undefined, display?: (name: string, data: any, leve: Level, moduleName: string) => void);
    private _data(name, ...data);
    private _error(name, ...data);
    private _info(name, ...data);
    private _warn(name, ...data);
    /** @deprecated Use data(...)
     * @see data
    */
    d: (name: string, ...data: any[]) => this;
    /** @deprecated Use error(...)
     * @see error
    */
    er: (name: string, ...data: any[]) => this;
    /** @deprecated Use info(...)
     * @see info
    */
    i: (name: string, ...data: any[]) => this;
    /** @deprecated Use warn(...)
     * @see warn
    */
    w: (name: string, ...data: any[]) => this;
    /**
     * Logs message and data with the level=data
     * @param message The message
     * @param otherParams Additional parameters
     */
    data: (message: string, ...otherParams: any[]) => Logger<T>;
    /**
     * Logs message and data with the level=error
     * @param message The message
     * @param otherParams Additional parameters
     */
    error: (message: string, ...otherParams: any[]) => this;
    /**
     * Logs message and data with the level=info
     * @param message The message
     * @param otherParams Additional parameters
     */
    info: (message: string, ...otherParams: any[]) => this;
    /**
     * Logs message and data with the level=warn
     * @param message The message
     * @param otherParams Additional parameters
     */
    warn: (message: string, ...otherParams: any[]) => this;
    private _logMessage(name, level, ...data);
    private _level;
    private level(l);
    static isProductionMode: boolean;
    mute(): void;
}
