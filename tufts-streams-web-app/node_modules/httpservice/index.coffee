# SERVICE
# simplified interface to services that communicate in JSON, and are expected to give 200-level status codes

request = require 'request'
path = require 'path'

module.exports = (baseUrl) ->

  # remove the trailing slash
  baseUrl = baseUrl.replace /\/$/, ""

  fullUrl = (url) -> baseUrl + url

  # the common response handler for these things
  handle = (cb) ->
    (err, rs, body) ->
      if err? then return cb err
      if rs.statusCode >= 300 then return cb new Error "#{rs.request?.method} #{rs.request?.href} failed with #{rs.statusCode}"
      cb null, body

  # we set json to {} as a hack because the new version of express throws up
  # if you set Content-Type: application/json with no body
  get = (url, cb) ->
    request.get {url: fullUrl(url), json: {}}, handle(cb)

  post = (url, body, cb) ->
    request.post {url: fullUrl(url), json: body}, handle(cb)

  put = (url, body, cb) ->
    request.put {url: fullUrl(url), json: body}, handle(cb)

  del = (url, cb) ->
    request.del {url: fullUrl(url), json: {}}, handle(cb)

  return {
    handle
    get
    post
    put
    delete: del
  }
